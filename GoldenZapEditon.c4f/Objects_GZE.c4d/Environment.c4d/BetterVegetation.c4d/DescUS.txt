Reads out the "Vegetation" Section from the Scenario and uses this info to generate way more and way better vegetation. Also allows way more settings - the following can be set in the Script.c of the Vegetation object:

// This Plants doesn't grow from the ground but hangs from ceilings (e.g. Vines)
public func IsHangingVegetation() { return(0); }

// This Plant only grows on Underground (1) or only grows on the Surface (0)
public func IsUndergroundVegetation() { return(0); }

// If This Plant grows inside Liquids return e.g. Material("Water") or Material("Lava"). Otherwise 0
public func IsSubmergedVegetation() { return(0); }

// This plant may only grow on this material. When 0, the Plants will be placed on Materials that are set to Soil=1 in the .c4m
public func GetVegetationSoil() { return (Material("Grass")); }

// Placing-Multiplier in Percent. E.g. Grass is placed twice as often - you can have never enough grass :D
// Also very practical for customizing plant quantities in your scenario (via System.c4g #appendto)
public func GetVegetationPlacementBalance() { return(200); }

// How deep are the plants roots? (places item x pixel inside the soil)
public func GetVegetationRootDepth() { return(5); }

// Auto rotate the vegetation to fit the landscape between these angles
public func GetVegetationRotates() { return [-30, 30]; }

// Randomly size the vegetation between these 2 cons. This value is capped at 1-100, so you can e.g. set it to [50,200] to increase the chance of getting big vegetation
public func GetVegetationCons() { return [5, 200]; }


Please note: This object first remove the engine created garbage, so if you script-create vegetation objects of the same id, do it 1-2 frames later.